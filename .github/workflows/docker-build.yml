name: Source Declarative Manifest - Docker Build

on:
  push:
    branches:
      - main
    paths:
      - 'airbyte_cdk/pyproject.toml' # To only publish on CDK version change
      - 'Dockerfile'
  workflow_dispatch:
    inputs:
      version-tag:
        description: "Version tag for the image (optional)"
        required: false
        type: string

jobs:
  docker_build:
    name: Build and Publish SDM Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for artifact uploads

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU for mulit-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/christo/sdm-test' || github.event_name == 'workflow_dispatch') }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64 # Just build for the runner's architecture during test
          load: true
          tags: airbyte/source-declarative-manifest:build-test

      - name: Test image
        run: |
          docker run airbyte/source-declarative-manifest:build-test spec 

      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        continue-on-error: true # Prevent security scan from failing the build
        with:
          image-ref: airbyte/source-declarative-manifest:build-test
          format: table
          exit-code: 1
          severity: CRITICAL

      - name: Build and push
        if: ${{ success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/head/christo/sdm-test' || github.event_name == 'workflow_dispatch') }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            airbyte/source-declarative-manifest:${{ github.sha }}
            ${{ github.ref == 'refs/heads/main' && 'airbyte/source-declarative-manifest:latest' || '' }}
            ${{ github.event.inputs.version-tag != '' && format('airbyte/source-declarative-manifest:{0}', github.event.inputs.version-tag) || '' }}

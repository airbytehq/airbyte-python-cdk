name: Packaging and Publishing

on:
  push:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to publish (e.g., v6.7.0dev4)"
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2

  publish:
    name: Publish CDK to PyPI
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # Needed to upload artifacts to the release
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Debug Reference
        run: |
          echo "Event Name: $GITHUB_EVENT_NAME"
          echo "GitHub Ref: $GITHUB_REF"

      - name: Validate Tag or Version Input
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            if [ -z "${{ github.event.inputs.version }}" ]; then
              echo "Error: No version input provided for workflow_dispatch."
              exit 1
            fi
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF" =~ ^refs/tags/v(.+)$ ]]; then
            VERSION=${BASH_REMATCH[1]}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "Error: This workflow requires a valid tag (refs/tags/vX.Y.Z) to run."
            exit 1
          fi
          echo "Validated Version: $VERSION"

      - name: Attach Wheel to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.whl
          tag: ${{ env.VERSION }}
          overwrite: true
          file_glob: true

      - name: Publish to PyPI (${{ vars.PYPI_PUBLISH_URL }})
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          repository-url: ${{ vars.PYPI_PUBLISH_URL }}

  publish_sdm:
    name: Publish SDM to DockerHub
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [publish]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug SDM Environment
        run: |
          echo "Simulating SDM flow for branch: $GITHUB_REF"
          echo "Current SHA: $GITHUB_SHA"
          echo "Target Version: ${{ env.VERSION }}"

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Check for existing tag
        run: |
          tag="airbyte/source-declarative-manifest:${{ env.VERSION }}"
          if [ -z "$tag" ]; then
            echo "Error: VERSION is not set. Ensure the tag follows the format 'refs/tags/vX.Y.Z'."
            exit 1
          fi
          echo "Checking if tag '$tag' exists on DockerHub..."
          if DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect "$tag" > /dev/null 2>&1; then
            echo "The tag '$tag' already exists on DockerHub. Skipping publish to prevent overwrite."
            exit 1
          fi
          echo "No existing tag '$tag' found. Proceeding with publish."

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            airbyte/source-declarative-manifest:latte
            airbyte/source-declarative-manifest:${{ env.VERSION }}
            airbyte/source-declarative-manifest:${{ github.sha }}

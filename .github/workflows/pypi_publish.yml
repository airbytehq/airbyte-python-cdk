name: Python Packaging

on:
  push:

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # Needed to upload artifacts to the release
    environment:
      name: PyPI
      url: "https://pypi.org/p/airbyte-cdk"
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Attach Wheel to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.whl
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: Debug Publish Environment
        run: |
          echo "Publishing to PyPI"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "PYPI_PUBLISH_URL: ${{ vars.PYPI_PUBLISH_URL }}"

      - name: Publish to PyPI (${{vars.PYPI_PUBLISH_URL}})
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          # Can be toggled at the repository level between `https://upload.pypi.org/legacy/` and `https://test.pypi.org/legacy/`
          repository-url: ${{vars.PYPI_PUBLISH_URL}}

  publish_sdm:
    name: Publish SDM to DockerHub
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug SDM Environment
        run: |
          echo "Simulating SDM flow for branch: $GITHUB_REF"
          echo "Current SHA: $GITHUB_SHA"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Fetch Latest CDK Version
        run: |
          cdk_version=$(poetry search airbyte-cdk | grep -oP '^airbyte-cdk \K([0-9]+\.[0-9]+\.[0-9]+)')
          echo "CDK_VERSION=$cdk_version" >> $GITHUB_ENV
          echo "Fetched CDK Version: $cdk_version"

      - name: Simulate Main Branch Variables
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Simulating main branch behavior"
          echo "GITHUB_REF=refs/heads/main" >> $GITHUB_ENV
          echo "Simulated GITHUB_REF: refs/heads/main"

      - name: Build and Publish SDM
        run: |
          tag="airbyte/source-declarative-manifest:testing-${{ env.CDK_VERSION }}-${{ github.run_number }}"
          echo "Docker Tag: $tag"
          docker build -t $tag .
          docker push $tag

      - name: Debug Docker Push
        run: |
          docker images
          echo "Pushed Docker image with tag $tag"
